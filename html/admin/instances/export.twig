{% extends "assets/template.twig" %}

{% block htmlIncludes %}
    <!--Sortable-->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js" integrity="sha256-KM512VNnjElC30ehFwehXjx1YCHPiQkOPmqnrWtpccM=" crossorigin="anonymous"></script>
    <!-- Resolve conflict in jQuery UI tooltip with Bootstrap tooltip -->
    <script>
        $.widget.bridge('uibutton', $.ui.button)
    </script>
{% endblock %}
{% block content %}
<div class="row">
    <div class="col-12 col-md-8">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Instance Export</h3>
                <button onclick="addJoin($('#export-table').val())" class="btn btn-primary float-right d-none" id="add-join-button"><i class="fas fa-plus"></i> Add Table Join</button>
            </div>
            <div class="card-body">
                <div class="mb-3" id="export-table-container">
                    <select name="export-table" id="export-table" class="form-control">
                        <option selected disabled>Select a table...</option>
                        {% for table in tables %}
                            <option value={{table.value}}>{{table.name}}</option>
                        {% endfor %}
                    </select>
                </div>
                <div class="row" id="this-table-container">
                    <div class="col-12 col-md-6 d-none" id="export-column-container">
                        <div class="card">
                            <div class="card-header">
                                <h4 class="card-title">Which Columns?</h4>
                            </div>
                            <div class="card-body">
                                <div id="export-column-checkboxes" class="mx-2">
                                    <table class="table table-borderless" id="export-column-table"></table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-md-6 d-none" id="export-sorting-container">
                        <div class="card">
                            <div class="mb-3">
                                <div class="card-header">
                                    <h4 class="card-title">Sort By?</h4>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col">
                                            <div id="export-sort-radios">

                                            </div>
                                        </div>
                                        <div class="col">
                                            <div id="export-order-radios">
                                                <div class="form-check">
                                                    <input onchange="updateOverview()" class="form-check-input" type="radio" name="column-order-direction" id="order-ascending" value="ASC" checked>
                                                    <label class="form-check-label" for="order-ascending">
                                                        Ascending
                                                    </label>
                                                </div>
                                                <div class="form-check">
                                                    <input onchange="updateOverview()" class="form-check-input" type="radio" name="column-order-direction" id="order-descending" value="DESC">
                                                    <label class="form-check-label" for="order-descending">
                                                        Descending
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="join-container-container"></div>
    </div>
    <div class="col-12 col-md-4 ">
        <div class="card sticky-top" style="top: 70px;">
            <div class="card-header">
                <h3 class="card-title">Export Overview</h3>
            </div>
            <div class="card-body">
                <ul class="list-group my-2" id="summary-list">
                </ul> 
                <div class="btn-group my-2 d-none" role="group" id="export-buttons">
                    <div class="input-group-text">Export as</div>
                    <button class="btn btn-primary export-button" data-filetype="csv">.CSV</button>
                    <button class="btn btn-success export-button" data-filetype="xlsx">.XLSX</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    $( document ).ready( function () {

        $("#export-column-table").sortable({
            handle: ".handle",
            connectWith: "tr",
            update: updateOverview
        });
        
        //Update every time table is updated
        $('#export-table').on('change', function () {
            //Clear existing content
            $('#summary-list, #export-sort-radios, #export-column-table, #join-container-container').html("");
            //remove any remaining popovers
            $('.popover').remove();

            //Summary info
            $('#summary-list').append('<li class="list-group-item"><b>Table:</b> '+ this.value +'</li><li class="list-group-item"><b>Columns:</b> <span id="columns-display"><i>None</i></span</li><li class="list-group-item"><b>Sorting:</b> <span id="order-display"><i>None</i></span</li><li class="list-group-item"><b>Joined Tables:</b> <span id="joins-display"><i>None</i></span></li>');

            //get stuff
            getColumns(this.value, "#export-column-table", "#export-sort-radios");
            $("#export-column-container, #export-sorting-container, #add-join-button").removeClass("d-none"); 
        });

        //The actual Exporting
        $('.export-button').on('click', function () {
            let filetype = $(this).data("filetype");
            let table = $('#export-table').val();
            let joins = $(".joinContainer").map(function(){return $(this).data("table");}).get();
            let checkboxes = []
            $("#export-column-checkboxes input").each(function() {
                if (this.checked) checkboxes.push(this.value);
            });
            //add joined table columns
            joins.forEach(function (join) {
                let query = "#join-column-container-"+table+"-"+join+" input:checked";
                checkboxes.push($(query).map(function(){return $(this).val();}).get());
            });
            let sort = $('input[name="column-order"]:checked').val();
            let sortDirection = $('input[name="column-order-direction"]:checked').val();
            

            $.ajax({
                type:'POST',
                url:'{{ CONFIG.ROOTURL }}/api/instances/export/export.php',
                data: {
                    "filetype": filetype,
                    "table": table,
                    "columns": checkboxes.flat(),
                    "sort": sort,
                    "direction": sortDirection,
                    "joins": joins.flat(),
                },
                dataType:'json'
            }).done(function(response){
                var $a = $("<a>");
                $a.attr("href",response.response.data);
                $("body").append($a);
                $a.attr("download",table + "." + filetype);
                $a[0].click();
                $a.remove();
            }).fail(function () {
                bootbox.alert("There was an error with the selected query");
            });
        });
    });

    function updateOverview(){
        //Main table info
        let showButtons = false;
        let table = $('#export-table').val();

        //Look for joins
        let joins = $(".joinContainer").map(function(){return $(this).data("table");}).get();
        if (joins.length > 0){
            $("#joins-display").html(joins.join(", "));
        } else {
            $('#joins-display').html("<i>None</i>");
        }
        
        //main table checkboxes
        $('#columns-display').html("");
        let checkboxes = $("#export-column-checkboxes input:checked").map(function(){return $(this).val();}).get();
        //add joined table columns
        joins.forEach(function (join) {
            let query = "#join-column-container-"+table+"-"+join+" input:checked";
            checkboxes.push($(query).map(function(){return $(this).val();}).get());
        });
        if (checkboxes.length > 0) {
            $('#columns-display').html(checkboxes.join(", "));
            showButtons = true;
        } else {
            $('#columns-display').html("<i>None</i>");
        }
        if ($('input[name="column-order"]:checked').length > 0){
            $('#order-display').html($('input[name="column-order"]:checked').val() + ", " + $('input[name="column-order-direction"]:checked').val());
        } else {
            showButtons = false;
        }

        
        //ready to export?
        if (showButtons) {
            $("#export-buttons").removeClass("d-none");  
        } else {
            $("#export-buttons").addClass("d-none");  
        }
    }

    function removeMe(element) {
        $(element).parents("div.joinContainer").remove();
        //Show join adder button
        $("#add-join-button").removeClass("d-none");
    }

    /*
     * generate column options for a given table
     * @param table - table to fetch
     * @param columns - element to add column results to
     * @param sort - element to add sort results to
     */
    function getColumns(table, columns, sort) {
        ajaxcall("instances/export/getColumns.php", {
                'table_name': table
            }, function (data) {
                for (item of data.response){
                    $(columns).append(`
                        <tr class="row border">
                            <td class="border-right"><span class="handle"><i class="fas fa-ellipsis-v"></i><i class="fas fa-ellipsis-v"></i></span></td>
                            <td><div class="form-check">
                                <input onchange="updateOverview()" selected class="form-check-input" type="checkbox" value="`+ item.value +`" id="column-`+ item.value +`">
                                <label class="form-check-label" for="column-`+ item.value +`">`+ item.name +`</label>`+ (item.description ?' <i class="fas fa-info-circle" data-toggle="popover" title="'+ item.name +'" data-content="' + item.description + '"></i>' : '') +`
                            </div></td>
                        </tr>`);
                    $(sort).append(`
                        <div class="form-check">
                            <input onchange=updateOverview() class="form-check-input" type="radio" value="`+ item.value +`" name="column-order" id="order-`+ item.value +`">
                            <label class="form-check-label" for="order-`+ item.value +`">`+item.name+`</label>
                        </div>`);
                }
                $('[data-toggle="popover"]').popover();
            });
    }

    function addJoin(table){
        let joins = $(".joinContainer").map(function(){return $(this).data("table");}).get();
        ajaxcall(
            "instances/export/getJoins.php",
            {'table_name': table},
            function (data) {
                let options = []
                for (item of data.response){
                    if (!(joins.includes(item.value))){
                        options.push({text: item.name, value: item.value});
                    }
                }
                //hide join button if possible tables displayed
                if (options.length < 2) {
                    $("#add-join-button").addClass("d-none");
                }
                bootbox.prompt({
                    title: "Create New Asset Status",
                    inputType: "select",
                    multiple: false,
                    inputOptions: options,
                    callback: function (newTable) {
                        if (newTable){
                            let columnsid = "join-column-container-"+ table +"-"+ newTable;
                            let sortid = "join-sort-container-"+ table +"-"+ newTable;
                            //Add elements
                            $('#join-container-container').append(`
                            <div class="joinContainer container" data-table="`+newTable+`" id="join-container-`+table+`-`+newTable+`">
                                <div class="card">
                                    <div class="card-header">
                                        <h3 class="card-title">Join `+ newTable +`</h3>
                                        <button onclick="removeMe(this)" class="btn btn-danger float-right"><i class="fas fa-trash"></i> Remove Table Join</button>
                                    </div>
                                    <div class="card-body">
                                        <div class="row justify-content-center" id="join-container-`+table+`-`+newTable+`">
                                            <div class="col-12 col-md-6">
                                                <div class="card">
                                                    <div class="card-header"><h4 class="card-title">Which Columns?</h4></div>
                                                    <div class="card-body"><div class="mx-2"><table class="table table-borderless" id="`+ columnsid +`"></table></div></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>`);
                            //Get column data
                            getColumns(newTable, '#'+columnsid, null );
                            $("#"+columnsid).sortable({
                                handle: ".handle",
                                connectWith: "tr",
                                update: updateOverview
                            });
                            updateOverview();
                        } else {
                            //prompt was cancelled so make sure add button is visible still
                            $("#add-join-button").removeClass("d-none");
                        }
                    }
                });
            },
            false
        );        
    }
</script>
{% endblock %}