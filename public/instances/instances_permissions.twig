{% extends "assets/template.twig" %}

{% block content %}
	<div class="row">
	<div class="col-lg-12 col-md-12">
		<div class="card">
			<div class="card-header">
				<h3 class="card-title">Business Role Groups</h3>
				{% if 16|instancePermissions %}
				<div class="card-tools pull-right">
					<button type="button" class="btn btn-tool" id="addNewInstancePosition"><i class="fa fa-plus"></i>
					</button>
				</div>
				{% endif %}
			</div>
			<div class="card-body table-responsive p-0" style="overflow-x: scroll;">
				<table class="table table-striped table-head-fixed" >
					<thead>
						<tr>
							<th></th>
							<th></th>
							{% for position in positions %}
							<th>{{position.instancePositions_displayName}}</th>
							{% endfor %}
						</tr>
					</thead>
					<tbody>
						{% for category in actions %}
							<tr>
								<td colspan="{{ 2+positions|length }}"><h3>{{ category.category.instanceActionsCategories_name }}</h3></td>
							</tr>
							{% for action in category.actions %}
								<tr>
									<td>{{action.instanceActions_id}}</td>
									<td>{{action.instanceActions_name}}</td>
									{% for position in positions %}
                                        {% set positioncannotbecausedep = "false" %}
                                        {% set positioncannotbecauseindep = "false" %}
									<td>
										{% for dependentactionid in action.instanceActions_dependent|split(',') %}
                                            {% if dependentactionid != "" and dependentactionid not in position.instancePositions_actions|split(',') %}
												<span class="badge badge-warning" title="Requires other permission to be set first">{{ dependentactionid }}</span>
                                                {% set positioncannotbecausedep = "true" %}
                                            {% endif %}
                                        {% endfor %}
                                        {% for independentactionid in action.instanceActions_incompatible|split(',') %}
                                            {% if independentactionid != "" and independentactionid in position.instancePositions_actions|split(',') %}

												<span class="badge badge-danger" title="Requires other permission to be removed first">{{ independentactionid }}</span>
                                                {% set positioncannotbecauseindep = "true" %}
                                            {% endif %}
                                        {% endfor %}

										{% if 12|instancePermissions %}
                                        <input type="checkbox" data-permissionid="{{action.instanceActions_id}}" data-positionid="{{position.instancePositions_id}}" {% if action.instanceActions_id in position.instancePositions_actions|split(',') %}checked{% endif %}  {% if positioncannotbecausedep == "true" or positioncannotbecauseindep == "true" %}disabled{% endif %} />
										{% else %}
											{% if action.instanceActions_id in position.instancePositions_actions|split(',') %}
												<div class="custom-control custom-switch custom-switch-off-danger custom-switch-on-success">
													<input type="checkbox" checked disabled class="custom-control-input">
													<label class="custom-control-label"></label>
												</div>
											{% else %}
												<div class="custom-control custom-switch custom-switch-off-danger custom-switch-on-success">
													<input type="checkbox" disabled class="custom-control-input">
													<label class="custom-control-label"></label>
												</div>
											{% endif %}
										{% endif %}
									</td>
								{% endfor %}
							{% endfor %}
						</tr>
					{% endfor %}
					</tbody>
				</table>
			</div>
			<div class="overlay" id="loading">
				<i class="fas fa-sync fa-spin fa-3x"></i>
			</div>
		</div>
	</div>
</div>
{% if 12|instancePermissions %}
<script>
$(document).ready(function() {

	function updatePermission(checkbox){
		let permissionid = $(checkbox).data("permissionid");
		$("#loading").show();
		if($(checkbox).is(":checked")) {
			var get = "addpermission=" + permissionid;
		} else {
			var get = "removepermission=" + permissionid;
		}
		$.ajax({
			url: "{{CONFIG.ROOTURL}}/api/permissions/instancePermissionsEditor.php?" + get + "&position=" + $(checkbox).data("positionid"),
			cache : false,
			success: function(result){
				if (result == '1') {
					$("#loading").hide();
                    location.reload();
				} else {
					bootbox.alert(result + "Sorry - Operation could not be completed! Please try again!", function() {
						location.reload();
					});
				}
			}
		});
	}

	$("#loading").hide();
	$(':checkbox').change(function() {
		let checkbox = $(this);
		let permissionid = checkbox.data("permissionid")
		//show a popup if this is a signup code permission
		if (checkbox.is(":checked") && (permissionid == "110" || permissionid == "111")) {
			bootbox.confirm({
				title: "Warning - potential privilege escalation",
				message: "Selecting this position allows a user to create a signup code that they can use to create an account in your business with any position group they choose. <br />This permission is normally only enabled for administrators in a business.<br /> Are you sure you want to enable it?",
				buttons: {
					confirm: {
						label: 'Yes',
					},
					cancel: {
						label: 'No',
					},
				},
				callback: function (result) {
					if (result){
						updatePermission(checkbox);
					} else {
						location.reload();
					}
				}
			})
		} else {
			updatePermission(checkbox);
		}	
	});
});
</script>
{% else %}
<script>
	$(document).ready(function() {
		$("#loading").hide();
	});
</script>
{% endif %}

	{% if 16|instancePermissions %}
	<script>
		$(document).ready(function() {
			$("#addNewInstancePosition").on("click", function () {
				bootbox.prompt("Enter role group name", function(result){
					if (result) {
						ajaxcall("permissions/newInstancePosition.php", {"name": result}, function() {
							location.reload();
						}, true);
					}
				});
			});
		});
	</script>
	{% endif %}
{% endblock %}
