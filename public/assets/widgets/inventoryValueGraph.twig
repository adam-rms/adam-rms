{% if false %}
{% set THISWIDGET = WIDGETS.widget('inventoryValueGraph', {'instanceid': USERDATA.instance.instances_id}) %}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.js" integrity="sha256-R4pqcOYV8lt7snxMQO/HSbVCFRPMdrhAFMH+vr9giYI=" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jQuery-Knob/1.2.13/jquery.knob.min.js" integrity="sha256-2144q+NOM/XU6ZxSqRTJ8P0W/CkY6zXc6mXYt4+mF9s=" crossorigin="anonymous"></script>
    <div class="card bg-gradient-info statsWidget">
        <div class="card-header border-0">
            <h3 class="card-title">
                <i class="fas fas fa-warehouse mr-1"></i>
                Assets
            </h3>

            <div class="card-tools">
                {% if WIDGETS.checkUser('inventoryValueGraph') %}
                    <button type="button" class="btn bg-info btn-sm removeWidgetButton" data-widgetname="inventoryValueGraph" data-card-widget="remove" title="Remove from Dashboard">
                        <i class="fas fa-times"></i>
                    </button>
                {% else %}
                    <button type="button" class="btn bg-info btn-sm addWidgetButton" data-widgetname="inventoryValueGraph" title="Add to Dashboard">
                        <i class="fas fa-plus"></i>
                    </button>
                {% endif %}
            </div>
        </div>
        <div class="card-body">
            <canvas class="chart" id="inventoryValueGraphChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>
        </div>
    </div>
    <script>
        $(document).ready(function () {
            var graphChartCanvas = $('#inventoryValueGraphChart').get(0).getContext('2d');
            var graphChartData = {
                labels  : [
                    {% for key,value in THISWIDGET.timeSeriesValue %}'{{key}}',{% endfor %}],
                datasets: [
                    {
                        label               : 'Total Value',
                        fill                : false,
                        borderWidth         : 2,
                        lineTension         : 0,
                        spanGaps : true,
                        borderColor         : '#efefef',
                        pointRadius         : 3,
                        pointHoverRadius    : 7,
                        pointColor          : '#efefef',
                        pointBackgroundColor: '#efefef',
                        data                : [
                            {% set total = 0.0 %}
                            {% for key,value in THISWIDGET.timeSeriesValue %}
                                {{ value|moneyDecimal }}
                            ,{% endfor %}],
                        yAxisID: "y-axis-value",
                    },
                    {
                        label               : 'Total Mass',
                        fill                : false,
                        borderWidth         : 2,
                        lineTension         : 0,
                        spanGaps : true,
                        borderColor         : '#ffc1c1',
                        pointRadius         : 3,
                        pointHoverRadius    : 7,
                        pointColor          : '#ffc1c1',
                        pointBackgroundColor: '#ffc1c1',
                        data                : [{% set total = 0.0 %}
                            {% for key,value in THISWIDGET.timeSeriesMass %}
                            {% set total = total + value %}
                            {{ total }}
                            ,{% endfor %}],
                        yAxisID: "y-axis-mass",
                    },
                ]
            };
            var graphChartOptions = {
                tooltips: {
                    enabled: false,
                },
                maintainAspectRatio : false,
                responsive : true,
                legend: {
                    display: true,
                    position: "bottom",
                    labels: {
                        "fontColor": '#efefef',
                    }
                },
                scales: {
                    xAxes: [{
                        ticks : {
                            fontColor: '#efefef',
                        },
                        gridLines : {
                            display : false,
                            color: '#efefef',
                            drawBorder: false,
                        }
                    }],
                    yAxes: [{
                        ticks : {
                            callback: function(value, index, values) {
                                return 'Â£' + value.toLocaleString();
                            },
                            fontColor: '#efefef',
                            beginAtZero: true,
                        },
                        gridLines : {
                            display : true,
                            color: '#efefef',
                            drawBorder: false,
                        },
                        position: "left",
                        id: "y-axis-value",
                    },{
                        ticks : {
                            callback: function(value, index, values) {
                                return value.toLocaleString() + "kg";
                            },
                            fontColor: '#efefef',
                            beginAtZero: true,
                        },
                        position: "right",
                        gridLines : {
                            display : false,
                            color: '#efefef',
                            drawBorder: false,
                        },
                        id: "y-axis-mass",
                    }]
                }
            }

            // This will get the first returned node in the jQuery collection.
            var graphChart = new Chart(graphChartCanvas, {
                    type: 'line',
                    data: graphChartData,
                    options: graphChartOptions
                }
            )
        });
    </script>
{% endif %}